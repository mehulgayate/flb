<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd "> 
 
 <!-- Tells Spring MVC to keep hibernate sessions open until web requests are complete, thereby enabling use of hibernate lazy loading -->
<bean name="openSessionInViewInterceptor"
 class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
    <property name="sessionFactory">
        <ref bean="sessionFactory"/>
    </property>
</bean>

<!-- Tells Spring MVC to look for web request handlers (controllers) that are marked with a @Controller annotation -->
<bean id="annotationMapper" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
    <!-- make this mapper before  other mappers -->
    <property name="order" value="0"/>
    <property name="interceptors">
        <list>
            <ref bean="openSessionInViewInterceptor"/>
        </list>
    </property>
</bean>

<mvc:interceptors>
                <bean class="com.flb.web.interceptor.DetectionInterceptor">
                        <property name="ignoreAuthenticationActions">
                                <list>
                                        <value>/admin</value>
                                         <value>/</value>
                                        <value>/admin-login</value>
                                        <value>/admin/delete-user</value>
                                        <value>/register</value>
                                        <value>/register/add</value>  
                                        <value>/user/login</value>    
                                        <value>/invoke-service</value>  
                                        <value>/blocked-users</value>    
                                        <value>/admin/activate-monitor</value>  
                                        <value>/admin/activate-user</value>  
                                        <value>/logout</value> 
                                        <value>/admin/login</value>
                                        <value>/admin/authenticate</value>
                                        <value>/admin/add-new-server</value>
                                        <value>/admin/edit-server</value>
                                        <value>/admin/graphs</value>
                                        <value>/admin/add-server</value>
                                        <value>/admin/update-server</value>
                                        <value>/notify/request-complete</value>
                                        <value>/graph-data</value>
                                        <value>/create-load</value> 
                                                    
                                                                                                              
                                </list>
                         </property>
                </bean>

                <bean
                        class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
                        <property name="sessionFactory" ref="sessionFactory" />
                </bean>
        </mvc:interceptors>

<bean id="freemarkerConfig"
 class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    
    <!-- Proper setting for loading templates form within the webapp -->
    <property name="templateLoaderPath" value="/WEB-INF/jsp/"/>
    
    <!-- Temporary setting for seeing development changes right away without copying/building to the webapp
    NOTE: Deprecated way.  See build script build_local.sh for a better way
    <property name="templateLoaderPath" value="file:///bh/ws/steward-quality/src/main/webapp/WEB-INF/freemarker/"/>
    -->
</bean>

<!-- Tells Spring MVC to use freemarker to render views -->
<bean id="freemarkerViewResolver"
 class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
    <property name="cache" value="true"/>
    <property name="prefix" value=""/>
    <property name="suffix" value=".ftl"/>
    <property name="exposeSpringMacroHelpers" value="true"/>
    <property name="requestContextAttribute" value="ctx"/>
</bean>
 
    <context:component-scan
        base-package="com.flb.web" />
         
    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
            value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean name="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
    <property name="order" value="0"/>
</bean>

<bean name="jsonViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
   	<property name="order" value="0" />
</bean>
    
</beans>